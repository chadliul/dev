// 同步供应商数据
var SUPPLIER_MODEL_UK = "facd9b98cdc24534acf2c5ba51480676";
var DATA_ID = "_id";
var SYSTEM_MODEL = "_modelUniqueKey";
var SYSTEM_VERSION = "_version";
var SYSTEM_CONTENT = "content";
var SUPPLIER_GROUP_ALIAS = "supplierAccountGrp";
var SUPPLIER_BANKS_ALIAS = "banks";
var ITEMS_ATTRIBUTE_NAME = "items";
var ITEMS_BANKT_ALIAS = "bkont";
var ITEMS_ISBILL_ALIAS = "isBillBank";
var REQUEST_SIGN_API_NAME = "sendApi";
var SUPPLIER_TAG = "suppliers";
var SUPPLIER_TYPE_ENUM = {
    'ZR01': 'cee68c41e90c49c39425432700aa334b',
    'ZR02': '4f96fa1579d045d88b44be4db952b14b',
    'ZR03': '411504970b474ab8ba67bd7322ac7cd3',
    'ZR04': '38e228d40b1d4458872285738679d6ac',
    'ZR05': 'dcb9ce7c1b6940b980834ee00a24e02a',
    'ZR06': '5cd8c534248647d39ccca784fda6d995',
    'ZR07': '14dc05a8027645af9b9a175fcd61b995',
    'ZR08': 'f0fe44f3f3b04188ac2c8d4683ce7718',
    'ZR09': '91af0989e8654fadb5db2e4d7e2df0de',
    'Z003':'0b14faeb846946bab8671d057220c90a'
};
var BANK_CONTROL_ENUM = {
    '10' : '2386e3e3d63b4fb492f381df96a6b1e4',
    '20' : 'e0ee670fb44b44bdbb6af8dd58236d07'
};
var EMBEDDED_ALIAS_UK =   {
    "bkont":"c15789b080994718b2a3cd005f740107",
    "bankNm":"81b83f58830f440380a3ed1bc1cd5cd7",
    "accountOwner":"1300ce1b578d42d59dad454b31612da8",
    "bankCountry":"ff216087650b4bc9bfb2e81572aca8e9",
    "bankCode":"b1323bf5756845b2a4cd4c77d4b1d8e4",
    "accountNo":"9b263e51e9e34be0b344d41485d9eecf",
    "isBillBank":"718e80ba6dd14046af09c997044d5c4c"
};

var requestData = args.request.data;
var preview = args.preview;
var result;

// 枚举需要特殊处理
do {
    // 唯一标识，不存在则返回
    if (!requestData[SUPPLIER_TAG]) {
        result = {'success': false, 'code': '40001','message': 'suppliers is null. modelUK ' + SUPPLIER_MODEL_UK};
        break; 
    }

    var supplierExistQueryList = [];
    var supplierRequestList = requestData[SUPPLIER_TAG];
    var toSaveSupplierList = [];
    for (let supplierIndex in supplierRequestList) {
        let supplierRequest = supplierRequestList[supplierIndex];
        supplierExistQueryList.push(supplierRequest['code']);
        if (supplierRequest['supplierAccountGrp']) {
            supplierRequest['supplierAccountGrp'] = [SUPPLIER_TYPE_ENUM[supplierRequest['supplierAccountGrp']]];
        }
        let toSaveBanks = [];
        if (supplierRequest['banks']) {
            let embeddedBankList = supplierRequest['banks'];
            for (let embeddedIndex in embeddedBankList) {
                let embeddedElement = embeddedBankList[embeddedIndex];
                let toSaveElement = {};
                for (let elementKey in embeddedElement) {
                    if (elementKey === 'bkont') {
                        let bkcontValue = embeddedElement['bkont'];
                        toSaveElement[elementKey] = [BANK_CONTROL_ENUM[bkcontValue]];
                    } else if (elementKey === 'isBillBank') {
                        toSaveElement[elementKey] = new Boolean(1);
                    } else {
                        if (EMBEDDED_ALIAS_UK[elementKey]) {
                            toSaveElement[elementKey] = embeddedElement[elementKey];
                        }
                    }
                }
                toSaveBanks.push(toSaveElement);
            }
        }
        if (toSaveBanks.length > 0) {
            supplierRequest['banks'] = {"items":toSaveBanks};
        }
        console.log("request supplier is " + JSON.stringify(supplierRequest));
        toSaveSupplierList.push(supplierRequest);
    }

    let supplierQuery = {'code': {'$in':supplierExistQueryList}};
    let supplier = dataQuery.query(context,SUPPLIER_MODEL_UK,supplierQuery);
    let supplierList = supplier.get(SYSTEM_CONTENT);
    var existSupplierMap = {};
    if (supplierList != null && supplierList.size() > 0) {
        for(let existIndex in supplierList) {
            let existSupplierItem = supplierList.get(existIndex);
            existSupplierMap[existSupplierItem.get('code')] = existSupplierItem;
        }
    }
    
    // 拼接数据准备入库
    dataRepository.begin(context);
    for(let toSaveIndex in toSaveSupplierList) {
        let toSaveSupplierItem = toSaveSupplierList[toSaveIndex];
        if (existSupplierMap[toSaveSupplierItem['code']] == void 0) {
            // todo init states
            toSaveSupplierItem['_lifecycleInstance'] = {'status':'WAITING','states':[{'uniqueKey':'7af5ccc610cf11ed8d154a29d0e817e0','status':'WAITING','activities':[]}]};
            dataRepository.save(context, SUPPLIER_MODEL_UK, toSaveSupplierItem);
        }
    }

    var res = dataRepository.commit(context);
    if (res) {
        result = {'success': true, 'code': '200','data': requestData};
    } else {
        result = {'success': false, 'code': '40002','message': 'transaction commit execute error. modelUK ' + SUPPLIER_MODEL_UK};
    }

} while (false);

// 结果输出
result